<?php
/**
 * Add a new user custom fields eraser for the privacy tools.
 *
 * @package     wpum-personal-data
 * @copyright   Copyright (c) 2018, Alessandro Tesoro
 * @license     https://opensource.org/licenses/gpl-license GNU Public License
 * @since       1.1.0
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * Register a custom eraser for the user custom fields.
 *
 * @param array $erasers
 * @return void
 */
function wpumpd_plugin_register_erasers( $erasers = array() ) {

	$erasers[] = array(
		'eraser_friendly_name' => esc_html__( 'Additional account details', 'wpum-personal-data' ),
		'callback'             => 'wpumpd_plugin_user_data_eraser',
	);

	return $erasers;

}
add_filter( 'wp_privacy_personal_data_erasers', 'wpumpd_plugin_register_erasers' );

/**
 * Function that erases all the values submitted through custom fields generated by WPUM.
 *
 * @param string $email_address
 * @param integer $page
 * @return void
 */
function wpumpd_plugin_user_data_eraser( $email_address, $page = 1 ) {

	if ( empty( $email_address ) ) {
		return array(
			'items_removed'  => false,
			'items_retained' => false,
			'messages'       => array(),
			'done'           => true,
		);
	}

	$user = get_user_by( 'email', $email_address );

	$messages       = array();
	$items_removed  = false;
	$items_retained = false;

	if ( $user && $user->ID ) {

		$fields = WPUM()->fields->get_fields(
			[
				'orderby' => 'field_order',
				'order'   => 'ASC',
			]
		);

		if ( is_array( $fields ) && ! empty( $fields ) ) {
			foreach ( $fields as $field ) {
				if ( $field->is_primary() ) {
					continue;
				}
				if ( ! empty( carbon_get_user_meta( $user->ID, $field->get_meta( 'user_meta_key' ) ) ) ) {
					$field_to_remove = delete_user_meta( $user->ID, $field->get_meta( 'user_meta_key' ) );
					if ( $field_to_remove ) {
						$items_removed = true;
					} else {
						$messages[] = sprintf( esc_html__( 'Your "%s" was unable to be removed at this time.', 'wpum-personal-data' ), $field->get_name() );
						$items_retained = true;
					}
				}
			}
		}
	}

	return array(
		'items_removed'  => $items_removed,
		'items_retained' => $items_retained,
		'messages'       => $messages,
		'done'           => true,
	);

}